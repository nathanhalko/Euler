package com.spotinfluence

/*
Find the greatest product of five consecutive digits in the 1000-digit number.
 */

object Prob008 {
  def main(args: Array[String]) {

    val num = "73167176531330624919225119674426574742355349194934\n96983520312774506326239578318016984801869478851843\n85861560789112949495459501737958331952853208805511\n12540698747158523863050715693290963295227443043557\n66896648950445244523161731856403098711121722383113\n62229893423380308135336276614282806444486645238749\n30358907296290491560440772390713810515859307960866\n70172427121883998797908792274921901699720888093776\n657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

    val x = num.replaceAll("\n","").sliding(5)

    val maxProduct = x.map(a => a.map(b => b.toInt - 48).product).max
    /*
    Weird, for some reason char2int adds 48 to the result ??

    ie:   val s = "1"      ; s.toInt = 1
          val s = "12345"  ; s(0).toInt = 49
     */

/* -ljr
 *
 * Characters are ASCII/UTF8.  You are translating a character to the Int index of the character in the given charset.
 * To parse a number use Integer.parseInt(str, base=10)
 */

    println(maxProduct)

    //Answer = 40824

  }
}
